[platformio]
; Set project-wide locations (base is the CPS project folder)
src_dir = OOP/CPS-CyberPhysicalSystems

[env:uno]
platform = atmelavr
board = uno
framework = arduino
; Build only the Lr1 main entrypoint (exclude demo)
build_src_filter = +<Lr1/src/main.cpp> -<Lr1/src/demo_main.cpp>
; Include Lr1 libraries
lib_extra_dirs = OOP/CPS-CyberPhysicalSystems/Lr1/lib
; Optional: enable extra warnings
build_flags = -Wall -Wextra -I OOP/CPS-CyberPhysicalSystems/Lr1/lib
; Monitor settings
monitor_speed = 9600

[env:uno_demo]
platform = atmelavr
board = uno
framework = arduino
; Only build demo entrypoint from src
build_src_filter = +<Lr1/src/demo_main.cpp> -<Lr1/src/main.cpp>
lib_extra_dirs = OOP/CPS-CyberPhysicalSystems/Lr1/lib
build_flags = -Wall -Wextra -I OOP/CPS-CyberPhysicalSystems/Lr1/lib
monitor_speed = 115200

[env:rpipicow_traffic]
platform = raspberrypi
board = pico
framework = arduino
; Use dedicated Pico W traffic light sources
build_src_filter = +<TrafficLightPicoW/src/**>
lib_extra_dirs = OOP/CPS-CyberPhysicalSystems/TrafficLightPicoW/lib
monitor_speed = 115200
upload_protocol = mbed

[env:pico_basic]
platform = raspberrypi
board = pico
framework = arduino
; Basic traffic light using pins 10 (R), 9 (Y), 8 (G)
build_src_filter = +<PicoW/TrafficLightBasic/src/**>
monitor_speed = 115200
upload_protocol = mbed
